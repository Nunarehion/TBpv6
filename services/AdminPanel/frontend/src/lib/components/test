

<script>
	import { onMount } from 'svelte';
	import CollectionList from '$lib/components/CollectionList.svelte';
	import DocumentsSection from '$lib/components/DocumentsSection.svelte';

	let collections = [];
	let documents = [];
	let selectedCollection = null;
	let loadingCollections = true;
	let loadingDocuments = false;
	let error = null;

	onMount(async () => {
		try {
			const res = await fetch('/api');
			if (!res.ok) throw new Error('Failed to fetch collections');
			collections = await res.json();
		} catch (err) {
			error = err.message;
		} finally {
			loadingCollections = false;
		}
	});

	async function loadDocuments(name) {
		selectedCollection = name;
		documents = [];
		loadingDocuments = true;
		try {
			const res = await fetch(`/api/${name}`);
			if (!res.ok) throw new Error('Не удалось загрузить документы');
			documents = await res.json();
		} catch (err) {
			error = err.message;
		} finally {
			loadingDocuments = false;
		}
	}

	async function saveDocument(updatedDoc) {
		const { _id, ...data } = updatedDoc;
		await fetch(`/api/${selectedCollection}/${_id}`, {
			method: 'PUT',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify(data)
		});
		await loadDocuments(selectedCollection);
	}
</script>

<h1>Список коллекций из MongoDB</h1>

{#if error}
	<p style="color: red">Ошибка: {error}</p>
{:else if loadingCollections}
	<p>Загрузка коллекций...</p>
{:else}
	<CollectionList
		{collections}
		{selectedCollection}
		{loadingDocuments}
		onSelect={loadDocuments}
	/>

	<DocumentsSection
		{documents}
		{loadingDocuments}
		{selectedCollection}
		onSave={saveDocument}
	/>
{/if}
